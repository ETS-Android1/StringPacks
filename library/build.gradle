/* Copyright (c) Facebook, Inc. and its affiliates. All rights reserved.
 *
 * This source code is licensed under the Apache 2.0 license found in
 * the LICENSE file in the root directory of this source tree.
 */

import groovy.json.JsonSlurper

// Provide gradle script in project root directory to customize the build variants.
if (file("$rootDir/android-library-config.gradle").exists()) {
    apply from: "$rootDir/android-library-config.gradle"
} else {
    apply from: "android-library-config.gradle"
}

dependencies {
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.collection:collection:1.1.0"

    testImplementation "junit:junit:4.12"
    testImplementation "org.robolectric:robolectric:4.3"
}


// Register task to generate string pack files.
if (hasProperty('stringPacksConfigFile')) {
    def configFile = file(property('stringPacksConfigFile'))
    def spConfig = new JsonSlurper().parse(configFile)

    def packScript = "$projectDir/scripts/pack_strings.py"

    tasks.register('generateStringPacks', Exec) {
        workingDir "$rootDir"

        inputs.dir(fileTree("$rootDir/${spConfig.packable_strings_directory}"))
        inputs.file("$rootDir/${spConfig.pack_ids_class_file_path}")
        inputs.file(packScript)

        outputs.dir('src/main/assets')

        commandLine 'python3', packScript, '--config', configFile.path
    }

    tasks.whenTaskAdded { task ->
        if (task.name =~ /^generate.*Assets$/) {
            task.dependsOn generateStringPacks
        }
    }
}
